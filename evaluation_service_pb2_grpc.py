# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import evaluation_service_pb2 as evaluation__service__pb2


class RolloutStub(object):
  """RPC services for CMA
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RolloutWithParameter = channel.unary_unary(
        '/es_on_gke.Rollout/RolloutWithParameter',
        request_serializer=evaluation__service__pb2.RolloutRequest.SerializeToString,
        response_deserializer=evaluation__service__pb2.RolloutResponse.FromString,
        )


class RolloutServicer(object):
  """RPC services for CMA
  """

  def RolloutWithParameter(self, request, context):
    """The RPC service for policy evaluation
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RolloutServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RolloutWithParameter': grpc.unary_unary_rpc_method_handler(
          servicer.RolloutWithParameter,
          request_deserializer=evaluation__service__pb2.RolloutRequest.FromString,
          response_serializer=evaluation__service__pb2.RolloutResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'es_on_gke.Rollout', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
